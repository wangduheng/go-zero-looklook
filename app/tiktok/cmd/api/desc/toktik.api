syntax = "v1"

type (
	TitokLive {
		OpenUrl    string `json:"open_url"`
		Info       string `json:"info"`
		Name       string `json:"name"`
		Id         int64  `db:"id"`
		CreateTime int64  `db:"create_time"`
	}
	// 定义登录接口的请求体
	SaveLiveReq {
		OpenUrl string `json:"open_url"`
		Info    string `json:"info"`
		Name    string `json:"name"`
	}
	// 定义登录接口的响应体
	SaveLiveResp {
		Id int64 `json:"id"`
	}
	FetchLiveResp {
		List []TitokLive `json:"list"`
	}

	SaveResultReq {
		Id   int64  `json:"id"`
		Name string `json:"name"`
	}
	SaveResultResp {
		Content string `json:"content"`
	}
)

// 定义 HTTP 服务
// 微服务名称为 user，生成的代码目录和配置文件将和 user 值相关
@server(
	prefix: tiktok/v1
	group: tiktok
	jwt: JwtAuth

)
service tiktok {
	// 定义 http.HandleFunc 转换的 go 文件名称及方法
	@handler SaveLive
	// 定义接口
	// 请求方法为 post
	// 路由为 /user/login
	// 请求体为 LoginReq
	// 响应体为 LoginResp，响应体必须有 returns 关键字修饰
	post /save (SaveLiveReq) returns (SaveLiveResp)

	@handler fetch
	post /fetch returns (FetchLiveResp)

	@handler ping
	get /ping returns (string)

	@handler saveResult
	post /saveResult(SaveResultReq)returns (SaveResultResp)
}