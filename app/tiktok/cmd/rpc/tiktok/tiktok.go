// Code generated by goctl. DO NOT EDIT.
// Source: tiktok.proto

package tiktok

import (
	"context"

	"looklook/app/tiktok/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	DeleteLiveReq  = pb.DeleteLiveReq
	DeleteLiveResp = pb.DeleteLiveResp
	FetchLiveReq   = pb.FetchLiveReq
	FetchLiveResp  = pb.FetchLiveResp
	FindLiveReq    = pb.FindLiveReq
	FindLiveResp   = pb.FindLiveResp
	LiveData       = pb.LiveData
	SaveLiveReq    = pb.SaveLiveReq
	SaveLiveResp   = pb.SaveLiveResp
	SaveResultReq  = pb.SaveResultReq
	SaveResultResp = pb.SaveResultResp

	Tiktok interface {
		SaveLive(ctx context.Context, in *SaveLiveReq, opts ...grpc.CallOption) (*SaveLiveResp, error)
		FetchLives(ctx context.Context, in *FetchLiveReq, opts ...grpc.CallOption) (*FetchLiveResp, error)
		DeleteLiveOne(ctx context.Context, in *DeleteLiveReq, opts ...grpc.CallOption) (*DeleteLiveResp, error)
		FindLiveOne(ctx context.Context, in *FindLiveReq, opts ...grpc.CallOption) (*FindLiveResp, error)
		SaveResult(ctx context.Context, in *SaveResultReq, opts ...grpc.CallOption) (*SaveResultResp, error)
	}

	defaultTiktok struct {
		cli zrpc.Client
	}
)

func NewTiktok(cli zrpc.Client) Tiktok {
	return &defaultTiktok{
		cli: cli,
	}
}

func (m *defaultTiktok) SaveLive(ctx context.Context, in *SaveLiveReq, opts ...grpc.CallOption) (*SaveLiveResp, error) {
	client := pb.NewTiktokClient(m.cli.Conn())
	return client.SaveLive(ctx, in, opts...)
}

func (m *defaultTiktok) FetchLives(ctx context.Context, in *FetchLiveReq, opts ...grpc.CallOption) (*FetchLiveResp, error) {
	client := pb.NewTiktokClient(m.cli.Conn())
	return client.FetchLives(ctx, in, opts...)
}

func (m *defaultTiktok) DeleteLiveOne(ctx context.Context, in *DeleteLiveReq, opts ...grpc.CallOption) (*DeleteLiveResp, error) {
	client := pb.NewTiktokClient(m.cli.Conn())
	return client.DeleteLiveOne(ctx, in, opts...)
}

func (m *defaultTiktok) FindLiveOne(ctx context.Context, in *FindLiveReq, opts ...grpc.CallOption) (*FindLiveResp, error) {
	client := pb.NewTiktokClient(m.cli.Conn())
	return client.FindLiveOne(ctx, in, opts...)
}

func (m *defaultTiktok) SaveResult(ctx context.Context, in *SaveResultReq, opts ...grpc.CallOption) (*SaveResultResp, error) {
	client := pb.NewTiktokClient(m.cli.Conn())
	return client.SaveResult(ctx, in, opts...)
}
